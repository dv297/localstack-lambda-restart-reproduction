{
  "version": 4,
  "terraform_version": "1.6.5",
  "serial": 3757,
  "lineage": "ec0addc8-913f-d087-93c6-1ef9b64fd4d3",
  "outputs": {
    "api_gateway_base_url": {
      "value": "https://ribfbkk52q.execute-api.us-east-1.amazonaws.com/production",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "api_gateway_access_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "200205555",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"execute-api:Invoke\",\n      \"Resource\": \"*\",\n      \"Principal\": \"*\"\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "execute-api:Invoke"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "*"
                    ],
                    "type": "*"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "dynamodb_read_write",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "779025710",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"DynamoDBIndexAndStreamAccess\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"dynamodb:Scan\",\n        \"dynamodb:Query\",\n        \"dynamodb:ListStreams\",\n        \"dynamodb:GetShardIterator\",\n        \"dynamodb:GetRecords\",\n        \"dynamodb:DescribeStream\"\n      ],\n      \"Resource\": [\n        \"arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb/stream/*\",\n        \"arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb/index/*\"\n      ]\n    },\n    {\n      \"Sid\": \"DynamoDBTableAccess\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"dynamodb:UpdateItem\",\n        \"dynamodb:Scan\",\n        \"dynamodb:Query\",\n        \"dynamodb:PutItem\",\n        \"dynamodb:GetItem\",\n        \"dynamodb:DescribeTable\",\n        \"dynamodb:DeleteItem\",\n        \"dynamodb:ConditionCheckItem\",\n        \"dynamodb:BatchWriteItem\",\n        \"dynamodb:BatchGetItem\"\n      ],\n      \"Resource\": \"arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb*\"\n    },\n    {\n      \"Sid\": \"DynamoDBDescribeLimitsAccess\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"dynamodb:DescribeLimits\",\n      \"Resource\": [\n        \"arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb/index/*\",\n        \"arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb\"\n      ]\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "dynamodb:DescribeStream",
                  "dynamodb:GetRecords",
                  "dynamodb:GetShardIterator",
                  "dynamodb:ListStreams",
                  "dynamodb:Query",
                  "dynamodb:Scan"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb/index/*",
                  "arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb/stream/*"
                ],
                "sid": "DynamoDBIndexAndStreamAccess"
              },
              {
                "actions": [
                  "dynamodb:BatchGetItem",
                  "dynamodb:BatchWriteItem",
                  "dynamodb:ConditionCheckItem",
                  "dynamodb:DeleteItem",
                  "dynamodb:DescribeTable",
                  "dynamodb:GetItem",
                  "dynamodb:PutItem",
                  "dynamodb:Query",
                  "dynamodb:Scan",
                  "dynamodb:UpdateItem"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb*"
                ],
                "sid": "DynamoDBTableAccess"
              },
              {
                "actions": [
                  "dynamodb:DescribeLimits"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb",
                  "arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb/index/*"
                ],
                "sid": "DynamoDBDescribeLimitsAccess"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "lambda_invoke_policy_document",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4234570613",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"LambdaInvoke\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"lambda:InvokeFunction\",\n      \"Resource\": [\n        \"arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-lambda_authorizer\",\n        \"arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_realms\",\n        \"arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_consent_document_versions\",\n        \"arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get-current-consent-version\",\n        \"arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-create_user_consent_event\"\n      ]\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "lambda:InvokeFunction"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-create_user_consent_event",
                  "arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get-current-consent-version",
                  "arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_consent_document_versions",
                  "arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_realms",
                  "arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-lambda_authorizer"
                ],
                "sid": "LambdaInvoke"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_deployment",
      "name": "api_gateway_deployment",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_date": "2023-12-14T20:00:47Z",
            "description": "",
            "execution_arn": "arn:aws:execute-api:us-east-1:000000000000:ribfbkk52q/",
            "id": "kj3v2n9gpv",
            "invoke_url": "https://ribfbkk52q.execute-api.us-east-1.amazonaws.com/",
            "rest_api_id": "ribfbkk52q",
            "stage_description": null,
            "stage_name": null,
            "triggers": {
              "redeployment": "122dc41fd1f65956a2cfc1809c8bd4fde1135cbf"
            },
            "variables": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_rest_api.api_gateway_rest_api",
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "aws_iam_role.api_gateway_role",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.create_user_consent_event_lambda.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_inline",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_json",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_jsons",
            "module.create_user_consent_event_lambda.aws_iam_policy.async",
            "module.create_user_consent_event_lambda.aws_iam_policy.dead_letter",
            "module.create_user_consent_event_lambda.aws_iam_policy.logs",
            "module.create_user_consent_event_lambda.aws_iam_policy.tracing",
            "module.create_user_consent_event_lambda.aws_iam_policy.vpc",
            "module.create_user_consent_event_lambda.aws_iam_role.lambda",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.async",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.logs",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.tracing",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.vpc",
            "module.create_user_consent_event_lambda.aws_lambda_function.this",
            "module.create_user_consent_event_lambda.aws_s3_object.lambda_package",
            "module.create_user_consent_event_lambda.data.aws_arn.log_group_arn",
            "module.create_user_consent_event_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.data.aws_iam_policy.tracing",
            "module.create_user_consent_event_lambda.data.aws_iam_policy.vpc",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.additional_inline",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.assume_role",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.async",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.dead_letter",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.logs",
            "module.create_user_consent_event_lambda.data.aws_partition.current",
            "module.create_user_consent_event_lambda.data.external.archive_prepare",
            "module.create_user_consent_event_lambda.local_file.archive_plan",
            "module.create_user_consent_event_lambda.null_resource.archive",
            "module.get_consent_document_versions_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_inline",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_json",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_jsons",
            "module.get_consent_document_versions_lambda.aws_iam_policy.async",
            "module.get_consent_document_versions_lambda.aws_iam_policy.dead_letter",
            "module.get_consent_document_versions_lambda.aws_iam_policy.logs",
            "module.get_consent_document_versions_lambda.aws_iam_policy.tracing",
            "module.get_consent_document_versions_lambda.aws_iam_policy.vpc",
            "module.get_consent_document_versions_lambda.aws_iam_role.lambda",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.async",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_consent_document_versions_lambda.aws_lambda_function.this",
            "module.get_consent_document_versions_lambda.aws_s3_object.lambda_package",
            "module.get_consent_document_versions_lambda.data.aws_arn.log_group_arn",
            "module.get_consent_document_versions_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy.tracing",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy.vpc",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.async",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.logs",
            "module.get_consent_document_versions_lambda.data.aws_partition.current",
            "module.get_consent_document_versions_lambda.data.external.archive_prepare",
            "module.get_consent_document_versions_lambda.local_file.archive_plan",
            "module.get_consent_document_versions_lambda.null_resource.archive",
            "module.get_current_consent_version_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_inline",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_json",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_jsons",
            "module.get_current_consent_version_lambda.aws_iam_policy.async",
            "module.get_current_consent_version_lambda.aws_iam_policy.dead_letter",
            "module.get_current_consent_version_lambda.aws_iam_policy.logs",
            "module.get_current_consent_version_lambda.aws_iam_policy.tracing",
            "module.get_current_consent_version_lambda.aws_iam_policy.vpc",
            "module.get_current_consent_version_lambda.aws_iam_role.lambda",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.async",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_current_consent_version_lambda.aws_lambda_function.this",
            "module.get_current_consent_version_lambda.aws_s3_object.lambda_package",
            "module.get_current_consent_version_lambda.data.aws_arn.log_group_arn",
            "module.get_current_consent_version_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.data.aws_iam_policy.tracing",
            "module.get_current_consent_version_lambda.data.aws_iam_policy.vpc",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.async",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.logs",
            "module.get_current_consent_version_lambda.data.aws_partition.current",
            "module.get_current_consent_version_lambda.data.external.archive_prepare",
            "module.get_current_consent_version_lambda.local_file.archive_plan",
            "module.get_current_consent_version_lambda.null_resource.archive",
            "module.get_realms_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.aws_iam_policy.additional_inline",
            "module.get_realms_lambda.aws_iam_policy.additional_json",
            "module.get_realms_lambda.aws_iam_policy.additional_jsons",
            "module.get_realms_lambda.aws_iam_policy.async",
            "module.get_realms_lambda.aws_iam_policy.dead_letter",
            "module.get_realms_lambda.aws_iam_policy.logs",
            "module.get_realms_lambda.aws_iam_policy.tracing",
            "module.get_realms_lambda.aws_iam_policy.vpc",
            "module.get_realms_lambda.aws_iam_role.lambda",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.async",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_realms_lambda.aws_lambda_function.this",
            "module.get_realms_lambda.aws_s3_object.lambda_package",
            "module.get_realms_lambda.data.aws_arn.log_group_arn",
            "module.get_realms_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.data.aws_iam_policy.tracing",
            "module.get_realms_lambda.data.aws_iam_policy.vpc",
            "module.get_realms_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_realms_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_realms_lambda.data.aws_iam_policy_document.async",
            "module.get_realms_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_realms_lambda.data.aws_iam_policy_document.logs",
            "module.get_realms_lambda.data.aws_partition.current",
            "module.get_realms_lambda.data.external.archive_prepare",
            "module.get_realms_lambda.local_file.archive_plan",
            "module.get_realms_lambda.null_resource.archive",
            "module.lambda_authorizer.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.aws_iam_policy.additional_inline",
            "module.lambda_authorizer.aws_iam_policy.additional_json",
            "module.lambda_authorizer.aws_iam_policy.additional_jsons",
            "module.lambda_authorizer.aws_iam_policy.async",
            "module.lambda_authorizer.aws_iam_policy.dead_letter",
            "module.lambda_authorizer.aws_iam_policy.logs",
            "module.lambda_authorizer.aws_iam_policy.tracing",
            "module.lambda_authorizer.aws_iam_policy.vpc",
            "module.lambda_authorizer.aws_iam_role.lambda",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_inline",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_json",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_jsons",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_many",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_one",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.async",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.dead_letter",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.logs",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.tracing",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.vpc",
            "module.lambda_authorizer.aws_lambda_function.this",
            "module.lambda_authorizer.aws_s3_object.lambda_package",
            "module.lambda_authorizer.data.aws_arn.log_group_arn",
            "module.lambda_authorizer.data.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.data.aws_iam_policy.tracing",
            "module.lambda_authorizer.data.aws_iam_policy.vpc",
            "module.lambda_authorizer.data.aws_iam_policy_document.additional_inline",
            "module.lambda_authorizer.data.aws_iam_policy_document.assume_role",
            "module.lambda_authorizer.data.aws_iam_policy_document.async",
            "module.lambda_authorizer.data.aws_iam_policy_document.dead_letter",
            "module.lambda_authorizer.data.aws_iam_policy_document.logs",
            "module.lambda_authorizer.data.aws_partition.current",
            "module.lambda_authorizer.data.external.archive_prepare",
            "module.lambda_authorizer.local_file.archive_plan",
            "module.lambda_authorizer.null_resource.archive"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_method_settings",
      "name": "api_gateway_method_settings",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ribfbkk52q-production-*/*",
            "method_path": "*/*",
            "rest_api_id": "ribfbkk52q",
            "settings": [
              {
                "cache_data_encrypted": false,
                "cache_ttl_in_seconds": 300,
                "caching_enabled": false,
                "data_trace_enabled": true,
                "logging_level": "INFO",
                "metrics_enabled": true,
                "require_authorization_for_cache_control": true,
                "throttling_burst_limit": -1,
                "throttling_rate_limit": -1,
                "unauthorized_cache_control_header_strategy": "SUCCEED_WITH_RESPONSE_HEADER"
              }
            ],
            "stage_name": "production"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_deployment.api_gateway_deployment",
            "aws_api_gateway_rest_api.api_gateway_rest_api",
            "aws_api_gateway_stage.api_gateway_deployed_stage_production",
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "aws_iam_role.api_gateway_role",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.create_user_consent_event_lambda.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_inline",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_json",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_jsons",
            "module.create_user_consent_event_lambda.aws_iam_policy.async",
            "module.create_user_consent_event_lambda.aws_iam_policy.dead_letter",
            "module.create_user_consent_event_lambda.aws_iam_policy.logs",
            "module.create_user_consent_event_lambda.aws_iam_policy.tracing",
            "module.create_user_consent_event_lambda.aws_iam_policy.vpc",
            "module.create_user_consent_event_lambda.aws_iam_role.lambda",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.async",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.logs",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.tracing",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.vpc",
            "module.create_user_consent_event_lambda.aws_lambda_function.this",
            "module.create_user_consent_event_lambda.aws_s3_object.lambda_package",
            "module.create_user_consent_event_lambda.data.aws_arn.log_group_arn",
            "module.create_user_consent_event_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.data.aws_iam_policy.tracing",
            "module.create_user_consent_event_lambda.data.aws_iam_policy.vpc",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.additional_inline",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.assume_role",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.async",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.dead_letter",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.logs",
            "module.create_user_consent_event_lambda.data.aws_partition.current",
            "module.create_user_consent_event_lambda.data.external.archive_prepare",
            "module.create_user_consent_event_lambda.local_file.archive_plan",
            "module.create_user_consent_event_lambda.null_resource.archive",
            "module.get_consent_document_versions_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_inline",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_json",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_jsons",
            "module.get_consent_document_versions_lambda.aws_iam_policy.async",
            "module.get_consent_document_versions_lambda.aws_iam_policy.dead_letter",
            "module.get_consent_document_versions_lambda.aws_iam_policy.logs",
            "module.get_consent_document_versions_lambda.aws_iam_policy.tracing",
            "module.get_consent_document_versions_lambda.aws_iam_policy.vpc",
            "module.get_consent_document_versions_lambda.aws_iam_role.lambda",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.async",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_consent_document_versions_lambda.aws_lambda_function.this",
            "module.get_consent_document_versions_lambda.aws_s3_object.lambda_package",
            "module.get_consent_document_versions_lambda.data.aws_arn.log_group_arn",
            "module.get_consent_document_versions_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy.tracing",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy.vpc",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.async",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.logs",
            "module.get_consent_document_versions_lambda.data.aws_partition.current",
            "module.get_consent_document_versions_lambda.data.external.archive_prepare",
            "module.get_consent_document_versions_lambda.local_file.archive_plan",
            "module.get_consent_document_versions_lambda.null_resource.archive",
            "module.get_current_consent_version_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_inline",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_json",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_jsons",
            "module.get_current_consent_version_lambda.aws_iam_policy.async",
            "module.get_current_consent_version_lambda.aws_iam_policy.dead_letter",
            "module.get_current_consent_version_lambda.aws_iam_policy.logs",
            "module.get_current_consent_version_lambda.aws_iam_policy.tracing",
            "module.get_current_consent_version_lambda.aws_iam_policy.vpc",
            "module.get_current_consent_version_lambda.aws_iam_role.lambda",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.async",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_current_consent_version_lambda.aws_lambda_function.this",
            "module.get_current_consent_version_lambda.aws_s3_object.lambda_package",
            "module.get_current_consent_version_lambda.data.aws_arn.log_group_arn",
            "module.get_current_consent_version_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.data.aws_iam_policy.tracing",
            "module.get_current_consent_version_lambda.data.aws_iam_policy.vpc",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.async",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.logs",
            "module.get_current_consent_version_lambda.data.aws_partition.current",
            "module.get_current_consent_version_lambda.data.external.archive_prepare",
            "module.get_current_consent_version_lambda.local_file.archive_plan",
            "module.get_current_consent_version_lambda.null_resource.archive",
            "module.get_realms_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.aws_iam_policy.additional_inline",
            "module.get_realms_lambda.aws_iam_policy.additional_json",
            "module.get_realms_lambda.aws_iam_policy.additional_jsons",
            "module.get_realms_lambda.aws_iam_policy.async",
            "module.get_realms_lambda.aws_iam_policy.dead_letter",
            "module.get_realms_lambda.aws_iam_policy.logs",
            "module.get_realms_lambda.aws_iam_policy.tracing",
            "module.get_realms_lambda.aws_iam_policy.vpc",
            "module.get_realms_lambda.aws_iam_role.lambda",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.async",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_realms_lambda.aws_lambda_function.this",
            "module.get_realms_lambda.aws_s3_object.lambda_package",
            "module.get_realms_lambda.data.aws_arn.log_group_arn",
            "module.get_realms_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.data.aws_iam_policy.tracing",
            "module.get_realms_lambda.data.aws_iam_policy.vpc",
            "module.get_realms_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_realms_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_realms_lambda.data.aws_iam_policy_document.async",
            "module.get_realms_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_realms_lambda.data.aws_iam_policy_document.logs",
            "module.get_realms_lambda.data.aws_partition.current",
            "module.get_realms_lambda.data.external.archive_prepare",
            "module.get_realms_lambda.local_file.archive_plan",
            "module.get_realms_lambda.null_resource.archive",
            "module.lambda_authorizer.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.aws_iam_policy.additional_inline",
            "module.lambda_authorizer.aws_iam_policy.additional_json",
            "module.lambda_authorizer.aws_iam_policy.additional_jsons",
            "module.lambda_authorizer.aws_iam_policy.async",
            "module.lambda_authorizer.aws_iam_policy.dead_letter",
            "module.lambda_authorizer.aws_iam_policy.logs",
            "module.lambda_authorizer.aws_iam_policy.tracing",
            "module.lambda_authorizer.aws_iam_policy.vpc",
            "module.lambda_authorizer.aws_iam_role.lambda",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_inline",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_json",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_jsons",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_many",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_one",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.async",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.dead_letter",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.logs",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.tracing",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.vpc",
            "module.lambda_authorizer.aws_lambda_function.this",
            "module.lambda_authorizer.aws_s3_object.lambda_package",
            "module.lambda_authorizer.data.aws_arn.log_group_arn",
            "module.lambda_authorizer.data.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.data.aws_iam_policy.tracing",
            "module.lambda_authorizer.data.aws_iam_policy.vpc",
            "module.lambda_authorizer.data.aws_iam_policy_document.additional_inline",
            "module.lambda_authorizer.data.aws_iam_policy_document.assume_role",
            "module.lambda_authorizer.data.aws_iam_policy_document.async",
            "module.lambda_authorizer.data.aws_iam_policy_document.dead_letter",
            "module.lambda_authorizer.data.aws_iam_policy_document.logs",
            "module.lambda_authorizer.data.aws_partition.current",
            "module.lambda_authorizer.data.external.archive_prepare",
            "module.lambda_authorizer.local_file.archive_plan",
            "module.lambda_authorizer.null_resource.archive"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_rest_api",
      "name": "api_gateway_rest_api",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_source": "HEADER",
            "arn": "arn:aws:apigateway:us-east-1::/restapis/ribfbkk52q",
            "binary_media_types": [],
            "body": "openapi: 3.0.3\ninfo:\n  title: Consent Management API\n  version: 1.0.0\n  description: This API provides access to consent documents and stores information\n    on a user's interactions with those consent documents.\n  license:\n    name: proprietary\n  contact:\n    name: Consent Management Team\n\npaths:\n  /realms:\n    summary: Path used to manage the list of Realms.\n    get:\n      tags:\n        - Realm\n      security:\n        - lambda-authorizer: [ ]\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/realm'\n          description: Successful response - returns an array of `Realm` entities.\n      operationId: getrealms\n      summary: List All Realms\n      description: Gets a list of all `Realm` entities.\n      x-amazon-apigateway-integration:\n        credentials: arn:aws:iam::000000000000:role/cm-api-local-api-gateway-executor\n        httpMethod: \"POST\"\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_realms/invocations\"\n        responses:\n          default:\n            statusCode: \"302\"\n          \"400\":\n            statusCode: \"400\"\n          \"500\":\n            statusCode: \"500\"\n        passthroughBehavior: \"when_no_match\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n\n\n  /consent-documents/{realmIdentifier}/{consentTypeIdentifier}/versions:\n    summary: Path used to get the list of consent document versions.\n    get:\n      tags:\n        - Document Versions\n      security:\n        - lambda-authorizer: [ ]\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/versions'\n          description: Successful response - returns an array of document versions.\n      parameters:\n        - name: realmIdentifier\n          schema:\n            type: string\n          in: path\n          required: true\n        - name: consentTypeIdentifier\n          schema:\n            type: string\n          in: path\n          required: true\n      operationId: getConsentDocumentVersions\n      summary: Get all versions of the consent document\n      description: Gets a list of all `Versions` of the consent document.\n      x-amazon-apigateway-integration:\n        credentials: arn:aws:iam::000000000000:role/cm-api-local-api-gateway-executor\n        httpMethod: \"POST\"\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_consent_document_versions/invocations\"\n        responses:\n          default:\n            statusCode: \"302\"\n          \"400\":\n            statusCode: \"400\"\n          \"500\":\n            statusCode: \"500\"\n        passthroughBehavior: \"when_no_match\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n\n\n  /user-consents/{realmIdentifier}/{consentTypeIdentifier}/{consentDocumentEffectiveStartDate}/{user}:\n    post:\n      summary: Create a new user consent event record.\n      description: Creates a new user consent event record.\n      operationId: \"create-user-consent-event\"\n      tags:\n        - \"User Consent Event\"\n      security:\n        - lambda-authorizer: [ ]\n      responses:\n        \"200\":\n          description: user consent record has been created or updated\n      parameters:\n        - name: realmIdentifier\n          schema:\n            type: string\n          in: path\n          required: true\n        - name: user\n          schema:\n            type: string\n          in: path\n          required: true\n        - name: consentTypeIdentifier\n          schema:\n            type: string\n          in: path\n          required: true\n        - name: consentDocumentEffectiveStartDate\n          schema:\n            type: string\n          in: path\n          required: true\n      x-amazon-apigateway-integration:\n        credentials: arn:aws:iam::000000000000:role/cm-api-local-api-gateway-executor\n        httpMethod: \"POST\"\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-create_user_consent_event/invocations\"\n        requestParameters:\n          \"integration.request.path.realmIdentifier\": true\n        responses:\n          default:\n            statusCode: \"302\"\n          \"400\":\n            statusCode: \"400\"\n          \"500\":\n            statusCode: \"500\"\n        passthroughBehavior: \"when_no_match\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n\n  /consent-documents/{realmIdentifier}/{consentTypeIdentifier}/versions/current:\n    summary: Get current consent document version.\n    get:\n      tags:\n        - Consent Documents\n      security:\n        - lambda-authorizer: [ ]\n      responses:\n        \"200\":\n          description: Successful response - returns a current version of `ConsentDocumentVersion` entities.\n      operationId: get-current-consent-version\n      summary: Get current consent document version\n      description: Get current consent document version.\n      parameters:\n        - name: realmIdentifier\n          schema:\n            type: string\n          in: path\n          required: true\n        - name: consentTypeIdentifier\n          schema:\n            type: string\n          in: path\n          required: true\n      x-amazon-apigateway-integration:\n        credentials: arn:aws:iam::000000000000:role/cm-api-local-api-gateway-executor\n        httpMethod: \"POST\"\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get-current-consent-version/invocations\"\n        responses:\n          default:\n            statusCode: \"302\"\n          \"400\":\n            statusCode: \"400\"\n          \"500\":\n            statusCode: \"500\"\n        passthroughBehavior: \"when_no_match\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n\ncomponents:\n  securitySchemes:\n    lambda-authorizer:\n      type: apiKey\n      name: Authorization\n      in: header\n      x-amazon-apigateway-authorizer:\n        type: token\n        identitySource: method.request.header.Authorization\n        authorizerUri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-lambda_authorizer/invocations\n        authorizerCredentials: arn:aws:iam::000000000000:role/cm-api-local-api-gateway-executor\n        authorizerPayloadFormatVersion: '2.0'\n        authorizerResultTtlInSeconds: 300\n      x-amazon-apigateway-authtype: Custom scheme with corporate claims\n  schemas:\n    realm:\n      title: Realm\n      description: The authentication realm for which consent documents are available.\n      required:\n        - id\n      type: object\n      properties:\n        name:\n          description: Human-readable name of the realm\n          maxLength: 64\n          type: string\n          example: \"Member Experience\"\n        description:\n          description: Information about the realm and where it is used.\n          maxLength: 1024\n          type: string\n          example: \"Realm consisting of both Portal and Mobile\"\n        realmIdentifier:\n          description: Programmatic identifier of the realm.\n          maxLength: 64\n          type: string\n          example: \"MEMBER_EXPERIENCE\"\n    versions:\n      title: Consent Document Versions\n      description: An array of consent document versions\n      required:\n        - realmIdentifier\n        - consentTypeIdentifier\n      type: object\n      properties:\n        realmIdentifier:\n          description: Programmatic identifier of the realm.\n          maxLength: 64\n          type: string\n          example: \"MEMBER_EXPERIENCE\"\n        entityType:\n          description: A programmatic identifier for the shape / object being returned here.\n          maxLength: 64\n          type: string\n          example: \"ConsentDocumentVersion\"\n        createdAt:\n          description: ISO-8601 timestamp indicating when this consent document version was first created.\n          maxLength:\n          type: string\n          example: \"2018-02-10T09:30Z\"\n        updatedAt:\n          description: ISO-8601 timestamp indicating when this consent document version was last updated.\n          type: string\n          example: \"2018-02-10T09:30Z\"\n        canDecline:\n          description: True if the user can explicitly decline this consent document, false otherwise.\n          type: boolean\n          example: \"True\"\n        canSkip:\n          description: True if the user can skip the consent dialog without either accepting or rejecting the consent, false otherwise.\n          type: boolean\n          example: \"False\"\n        canSupress:\n          description: True if the user can suppress the showing of this consent request in future, false otherwise.\n          type: boolean\n          example: \"True\"\n        consentTypeName:\n          description: The consent type this consent document version is for\n          type: string\n          example: \"HIPAA AUTHORIZATION\"\n        effectiveStartDate:\n          description: The first date where this consent document version became active, served as an ISO-8601 timestamp.\n          type: string\n          example: \"2023-02-10T09:30Z\"\n        effectiveEndDate:\n          description: ISO-8601 timestamp indicating when this consent document version will first take effect.\n          type: string\n          example: \"2024-02-10T09:30Z\"\n        documentFormats:\n          description: A nested map that is keyed off of language and document format for easy access to individual consent document formats.\n          type: array\n          example: {}\n        documentRestrictions:\n          description: Consent document \"restrictions\" are certain business-logic rules about the consent document version.\n          type: object\n          example: {}",
            "created_date": "2023-12-14T20:00:47Z",
            "description": "API Gateway for the 'cm-api' project",
            "disable_execute_api_endpoint": false,
            "endpoint_configuration": [
              {
                "types": [
                  "REGIONAL"
                ],
                "vpc_endpoint_ids": []
              }
            ],
            "execution_arn": "arn:aws:execute-api:us-east-1:000000000000:ribfbkk52q",
            "fail_on_warnings": null,
            "id": "ribfbkk52q",
            "minimum_compression_size": "",
            "name": "cm-api-local-api",
            "parameters": null,
            "policy": "",
            "put_rest_api_mode": null,
            "root_resource_id": "3jqca8vee2",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "aws_iam_role.api_gateway_role",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.create_user_consent_event_lambda.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_inline",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_json",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_jsons",
            "module.create_user_consent_event_lambda.aws_iam_policy.async",
            "module.create_user_consent_event_lambda.aws_iam_policy.dead_letter",
            "module.create_user_consent_event_lambda.aws_iam_policy.logs",
            "module.create_user_consent_event_lambda.aws_iam_policy.tracing",
            "module.create_user_consent_event_lambda.aws_iam_policy.vpc",
            "module.create_user_consent_event_lambda.aws_iam_role.lambda",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.async",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.logs",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.tracing",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.vpc",
            "module.create_user_consent_event_lambda.aws_lambda_function.this",
            "module.create_user_consent_event_lambda.aws_s3_object.lambda_package",
            "module.create_user_consent_event_lambda.data.aws_arn.log_group_arn",
            "module.create_user_consent_event_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.data.aws_iam_policy.tracing",
            "module.create_user_consent_event_lambda.data.aws_iam_policy.vpc",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.additional_inline",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.assume_role",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.async",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.dead_letter",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.logs",
            "module.create_user_consent_event_lambda.data.aws_partition.current",
            "module.create_user_consent_event_lambda.data.external.archive_prepare",
            "module.create_user_consent_event_lambda.local_file.archive_plan",
            "module.create_user_consent_event_lambda.null_resource.archive",
            "module.get_consent_document_versions_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_inline",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_json",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_jsons",
            "module.get_consent_document_versions_lambda.aws_iam_policy.async",
            "module.get_consent_document_versions_lambda.aws_iam_policy.dead_letter",
            "module.get_consent_document_versions_lambda.aws_iam_policy.logs",
            "module.get_consent_document_versions_lambda.aws_iam_policy.tracing",
            "module.get_consent_document_versions_lambda.aws_iam_policy.vpc",
            "module.get_consent_document_versions_lambda.aws_iam_role.lambda",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.async",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_consent_document_versions_lambda.aws_lambda_function.this",
            "module.get_consent_document_versions_lambda.aws_s3_object.lambda_package",
            "module.get_consent_document_versions_lambda.data.aws_arn.log_group_arn",
            "module.get_consent_document_versions_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy.tracing",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy.vpc",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.async",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.logs",
            "module.get_consent_document_versions_lambda.data.aws_partition.current",
            "module.get_consent_document_versions_lambda.data.external.archive_prepare",
            "module.get_consent_document_versions_lambda.local_file.archive_plan",
            "module.get_consent_document_versions_lambda.null_resource.archive",
            "module.get_current_consent_version_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_inline",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_json",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_jsons",
            "module.get_current_consent_version_lambda.aws_iam_policy.async",
            "module.get_current_consent_version_lambda.aws_iam_policy.dead_letter",
            "module.get_current_consent_version_lambda.aws_iam_policy.logs",
            "module.get_current_consent_version_lambda.aws_iam_policy.tracing",
            "module.get_current_consent_version_lambda.aws_iam_policy.vpc",
            "module.get_current_consent_version_lambda.aws_iam_role.lambda",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.async",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_current_consent_version_lambda.aws_lambda_function.this",
            "module.get_current_consent_version_lambda.aws_s3_object.lambda_package",
            "module.get_current_consent_version_lambda.data.aws_arn.log_group_arn",
            "module.get_current_consent_version_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.data.aws_iam_policy.tracing",
            "module.get_current_consent_version_lambda.data.aws_iam_policy.vpc",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.async",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.logs",
            "module.get_current_consent_version_lambda.data.aws_partition.current",
            "module.get_current_consent_version_lambda.data.external.archive_prepare",
            "module.get_current_consent_version_lambda.local_file.archive_plan",
            "module.get_current_consent_version_lambda.null_resource.archive",
            "module.get_realms_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.aws_iam_policy.additional_inline",
            "module.get_realms_lambda.aws_iam_policy.additional_json",
            "module.get_realms_lambda.aws_iam_policy.additional_jsons",
            "module.get_realms_lambda.aws_iam_policy.async",
            "module.get_realms_lambda.aws_iam_policy.dead_letter",
            "module.get_realms_lambda.aws_iam_policy.logs",
            "module.get_realms_lambda.aws_iam_policy.tracing",
            "module.get_realms_lambda.aws_iam_policy.vpc",
            "module.get_realms_lambda.aws_iam_role.lambda",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.async",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_realms_lambda.aws_lambda_function.this",
            "module.get_realms_lambda.aws_s3_object.lambda_package",
            "module.get_realms_lambda.data.aws_arn.log_group_arn",
            "module.get_realms_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.data.aws_iam_policy.tracing",
            "module.get_realms_lambda.data.aws_iam_policy.vpc",
            "module.get_realms_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_realms_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_realms_lambda.data.aws_iam_policy_document.async",
            "module.get_realms_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_realms_lambda.data.aws_iam_policy_document.logs",
            "module.get_realms_lambda.data.aws_partition.current",
            "module.get_realms_lambda.data.external.archive_prepare",
            "module.get_realms_lambda.local_file.archive_plan",
            "module.get_realms_lambda.null_resource.archive",
            "module.lambda_authorizer.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.aws_iam_policy.additional_inline",
            "module.lambda_authorizer.aws_iam_policy.additional_json",
            "module.lambda_authorizer.aws_iam_policy.additional_jsons",
            "module.lambda_authorizer.aws_iam_policy.async",
            "module.lambda_authorizer.aws_iam_policy.dead_letter",
            "module.lambda_authorizer.aws_iam_policy.logs",
            "module.lambda_authorizer.aws_iam_policy.tracing",
            "module.lambda_authorizer.aws_iam_policy.vpc",
            "module.lambda_authorizer.aws_iam_role.lambda",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_inline",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_json",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_jsons",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_many",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_one",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.async",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.dead_letter",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.logs",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.tracing",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.vpc",
            "module.lambda_authorizer.aws_lambda_function.this",
            "module.lambda_authorizer.aws_s3_object.lambda_package",
            "module.lambda_authorizer.data.aws_arn.log_group_arn",
            "module.lambda_authorizer.data.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.data.aws_iam_policy.tracing",
            "module.lambda_authorizer.data.aws_iam_policy.vpc",
            "module.lambda_authorizer.data.aws_iam_policy_document.additional_inline",
            "module.lambda_authorizer.data.aws_iam_policy_document.assume_role",
            "module.lambda_authorizer.data.aws_iam_policy_document.async",
            "module.lambda_authorizer.data.aws_iam_policy_document.dead_letter",
            "module.lambda_authorizer.data.aws_iam_policy_document.logs",
            "module.lambda_authorizer.data.aws_partition.current",
            "module.lambda_authorizer.data.external.archive_prepare",
            "module.lambda_authorizer.local_file.archive_plan",
            "module.lambda_authorizer.null_resource.archive"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_stage",
      "name": "api_gateway_deployed_stage_production",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_log_settings": [],
            "arn": "arn:aws:apigateway:us-east-1::/restapis/ribfbkk52q/stages/production",
            "cache_cluster_enabled": false,
            "cache_cluster_size": "",
            "canary_settings": [],
            "client_certificate_id": "",
            "deployment_id": "kj3v2n9gpv",
            "description": "",
            "documentation_version": "",
            "execution_arn": "arn:aws:execute-api:us-east-1:000000000000:ribfbkk52q/production",
            "id": "ags-ribfbkk52q-production",
            "invoke_url": "https://ribfbkk52q.execute-api.us-east-1.amazonaws.com/production",
            "rest_api_id": "ribfbkk52q",
            "stage_name": "production",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            },
            "variables": null,
            "web_acl_arn": "",
            "xray_tracing_enabled": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_deployment.api_gateway_deployment",
            "aws_api_gateway_rest_api.api_gateway_rest_api",
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "aws_iam_role.api_gateway_role",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.create_user_consent_event_lambda.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_inline",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_json",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_jsons",
            "module.create_user_consent_event_lambda.aws_iam_policy.async",
            "module.create_user_consent_event_lambda.aws_iam_policy.dead_letter",
            "module.create_user_consent_event_lambda.aws_iam_policy.logs",
            "module.create_user_consent_event_lambda.aws_iam_policy.tracing",
            "module.create_user_consent_event_lambda.aws_iam_policy.vpc",
            "module.create_user_consent_event_lambda.aws_iam_role.lambda",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.async",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.logs",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.tracing",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.vpc",
            "module.create_user_consent_event_lambda.aws_lambda_function.this",
            "module.create_user_consent_event_lambda.aws_s3_object.lambda_package",
            "module.create_user_consent_event_lambda.data.aws_arn.log_group_arn",
            "module.create_user_consent_event_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.data.aws_iam_policy.tracing",
            "module.create_user_consent_event_lambda.data.aws_iam_policy.vpc",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.additional_inline",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.assume_role",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.async",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.dead_letter",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.logs",
            "module.create_user_consent_event_lambda.data.aws_partition.current",
            "module.create_user_consent_event_lambda.data.external.archive_prepare",
            "module.create_user_consent_event_lambda.local_file.archive_plan",
            "module.create_user_consent_event_lambda.null_resource.archive",
            "module.get_consent_document_versions_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_inline",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_json",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_jsons",
            "module.get_consent_document_versions_lambda.aws_iam_policy.async",
            "module.get_consent_document_versions_lambda.aws_iam_policy.dead_letter",
            "module.get_consent_document_versions_lambda.aws_iam_policy.logs",
            "module.get_consent_document_versions_lambda.aws_iam_policy.tracing",
            "module.get_consent_document_versions_lambda.aws_iam_policy.vpc",
            "module.get_consent_document_versions_lambda.aws_iam_role.lambda",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.async",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_consent_document_versions_lambda.aws_lambda_function.this",
            "module.get_consent_document_versions_lambda.aws_s3_object.lambda_package",
            "module.get_consent_document_versions_lambda.data.aws_arn.log_group_arn",
            "module.get_consent_document_versions_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy.tracing",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy.vpc",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.async",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.logs",
            "module.get_consent_document_versions_lambda.data.aws_partition.current",
            "module.get_consent_document_versions_lambda.data.external.archive_prepare",
            "module.get_consent_document_versions_lambda.local_file.archive_plan",
            "module.get_consent_document_versions_lambda.null_resource.archive",
            "module.get_current_consent_version_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_inline",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_json",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_jsons",
            "module.get_current_consent_version_lambda.aws_iam_policy.async",
            "module.get_current_consent_version_lambda.aws_iam_policy.dead_letter",
            "module.get_current_consent_version_lambda.aws_iam_policy.logs",
            "module.get_current_consent_version_lambda.aws_iam_policy.tracing",
            "module.get_current_consent_version_lambda.aws_iam_policy.vpc",
            "module.get_current_consent_version_lambda.aws_iam_role.lambda",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.async",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_current_consent_version_lambda.aws_lambda_function.this",
            "module.get_current_consent_version_lambda.aws_s3_object.lambda_package",
            "module.get_current_consent_version_lambda.data.aws_arn.log_group_arn",
            "module.get_current_consent_version_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.data.aws_iam_policy.tracing",
            "module.get_current_consent_version_lambda.data.aws_iam_policy.vpc",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.async",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.logs",
            "module.get_current_consent_version_lambda.data.aws_partition.current",
            "module.get_current_consent_version_lambda.data.external.archive_prepare",
            "module.get_current_consent_version_lambda.local_file.archive_plan",
            "module.get_current_consent_version_lambda.null_resource.archive",
            "module.get_realms_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.aws_iam_policy.additional_inline",
            "module.get_realms_lambda.aws_iam_policy.additional_json",
            "module.get_realms_lambda.aws_iam_policy.additional_jsons",
            "module.get_realms_lambda.aws_iam_policy.async",
            "module.get_realms_lambda.aws_iam_policy.dead_letter",
            "module.get_realms_lambda.aws_iam_policy.logs",
            "module.get_realms_lambda.aws_iam_policy.tracing",
            "module.get_realms_lambda.aws_iam_policy.vpc",
            "module.get_realms_lambda.aws_iam_role.lambda",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.async",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_realms_lambda.aws_lambda_function.this",
            "module.get_realms_lambda.aws_s3_object.lambda_package",
            "module.get_realms_lambda.data.aws_arn.log_group_arn",
            "module.get_realms_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.data.aws_iam_policy.tracing",
            "module.get_realms_lambda.data.aws_iam_policy.vpc",
            "module.get_realms_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_realms_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_realms_lambda.data.aws_iam_policy_document.async",
            "module.get_realms_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_realms_lambda.data.aws_iam_policy_document.logs",
            "module.get_realms_lambda.data.aws_partition.current",
            "module.get_realms_lambda.data.external.archive_prepare",
            "module.get_realms_lambda.local_file.archive_plan",
            "module.get_realms_lambda.null_resource.archive",
            "module.lambda_authorizer.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.aws_iam_policy.additional_inline",
            "module.lambda_authorizer.aws_iam_policy.additional_json",
            "module.lambda_authorizer.aws_iam_policy.additional_jsons",
            "module.lambda_authorizer.aws_iam_policy.async",
            "module.lambda_authorizer.aws_iam_policy.dead_letter",
            "module.lambda_authorizer.aws_iam_policy.logs",
            "module.lambda_authorizer.aws_iam_policy.tracing",
            "module.lambda_authorizer.aws_iam_policy.vpc",
            "module.lambda_authorizer.aws_iam_role.lambda",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_inline",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_json",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_jsons",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_many",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_one",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.async",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.dead_letter",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.logs",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.tracing",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.vpc",
            "module.lambda_authorizer.aws_lambda_function.this",
            "module.lambda_authorizer.aws_s3_object.lambda_package",
            "module.lambda_authorizer.data.aws_arn.log_group_arn",
            "module.lambda_authorizer.data.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.data.aws_iam_policy.tracing",
            "module.lambda_authorizer.data.aws_iam_policy.vpc",
            "module.lambda_authorizer.data.aws_iam_policy_document.additional_inline",
            "module.lambda_authorizer.data.aws_iam_policy_document.assume_role",
            "module.lambda_authorizer.data.aws_iam_policy_document.async",
            "module.lambda_authorizer.data.aws_iam_policy_document.dead_letter",
            "module.lambda_authorizer.data.aws_iam_policy_document.logs",
            "module.lambda_authorizer.data.aws_partition.current",
            "module.lambda_authorizer.data.external.archive_prepare",
            "module.lambda_authorizer.local_file.archive_plan",
            "module.lambda_authorizer.null_resource.archive"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "dynamodb_table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb",
            "attribute": [
              {
                "name": "pk",
                "type": "S"
              },
              {
                "name": "sk",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "deletion_protection_enabled": false,
            "global_secondary_index": [],
            "hash_key": "pk",
            "id": "cm-api-local-dynamodb",
            "import_table": [],
            "local_secondary_index": [],
            "name": "cm-api-local-dynamodb",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": "sk",
            "read_capacity": 5,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 1
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "dynamodb_read_write",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::000000000000:policy/cm-api-local-dynamodb-read-write",
            "description": "Read and write permissions for the DyanmoDB Table for the 'cm-api' project",
            "id": "arn:aws:iam::000000000000:policy/cm-api-local-dynamodb-read-write",
            "name": "cm-api-local-dynamodb-read-write",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"dynamodb:Scan\",\"dynamodb:Query\",\"dynamodb:ListStreams\",\"dynamodb:GetShardIterator\",\"dynamodb:GetRecords\",\"dynamodb:DescribeStream\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb/stream/*\",\"arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb/index/*\"],\"Sid\":\"DynamoDBIndexAndStreamAccess\"},{\"Action\":[\"dynamodb:UpdateItem\",\"dynamodb:Scan\",\"dynamodb:Query\",\"dynamodb:PutItem\",\"dynamodb:GetItem\",\"dynamodb:DescribeTable\",\"dynamodb:DeleteItem\",\"dynamodb:ConditionCheckItem\",\"dynamodb:BatchWriteItem\",\"dynamodb:BatchGetItem\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb*\",\"Sid\":\"DynamoDBTableAccess\"},{\"Action\":\"dynamodb:DescribeLimits\",\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb/index/*\",\"arn:aws:dynamodb:us-east-1:000000000000:table/cm-api-local-dynamodb\"],\"Sid\":\"DynamoDBDescribeLimitsAccess\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ADYZ6CCKD9ROXVOBEIGQZ",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "data.aws_iam_policy_document.dynamodb_read_write"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "invoke_lambda_iam_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::000000000000:policy/cm-api-local-invoke-lambda",
            "description": "IAM policy that allows the invocation of the lambdas associated to the 'cm-api' project",
            "id": "arn:aws:iam::000000000000:policy/cm-api-local-invoke-lambda",
            "name": "cm-api-local-invoke-lambda",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"lambda:InvokeFunction\",\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-lambda_authorizer\",\"arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_realms\",\"arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_consent_document_versions\",\"arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get-current-consent-version\",\"arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-create_user_consent_event\"],\"Sid\":\"LambdaInvoke\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "AWD8I4SLVV1ORUOLCM7SS",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "data.aws_iam_policy_document.lambda_invoke_policy_document",
            "module.create_user_consent_event_lambda.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_inline",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_json",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_jsons",
            "module.create_user_consent_event_lambda.aws_iam_policy.async",
            "module.create_user_consent_event_lambda.aws_iam_policy.dead_letter",
            "module.create_user_consent_event_lambda.aws_iam_policy.logs",
            "module.create_user_consent_event_lambda.aws_iam_policy.tracing",
            "module.create_user_consent_event_lambda.aws_iam_policy.vpc",
            "module.create_user_consent_event_lambda.aws_iam_role.lambda",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.async",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.logs",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.tracing",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.vpc",
            "module.create_user_consent_event_lambda.aws_lambda_function.this",
            "module.create_user_consent_event_lambda.aws_s3_object.lambda_package",
            "module.create_user_consent_event_lambda.data.aws_arn.log_group_arn",
            "module.create_user_consent_event_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.data.aws_iam_policy.tracing",
            "module.create_user_consent_event_lambda.data.aws_iam_policy.vpc",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.additional_inline",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.assume_role",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.async",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.dead_letter",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.logs",
            "module.create_user_consent_event_lambda.data.aws_partition.current",
            "module.create_user_consent_event_lambda.data.external.archive_prepare",
            "module.create_user_consent_event_lambda.local_file.archive_plan",
            "module.create_user_consent_event_lambda.null_resource.archive",
            "module.get_consent_document_versions_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_inline",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_json",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_jsons",
            "module.get_consent_document_versions_lambda.aws_iam_policy.async",
            "module.get_consent_document_versions_lambda.aws_iam_policy.dead_letter",
            "module.get_consent_document_versions_lambda.aws_iam_policy.logs",
            "module.get_consent_document_versions_lambda.aws_iam_policy.tracing",
            "module.get_consent_document_versions_lambda.aws_iam_policy.vpc",
            "module.get_consent_document_versions_lambda.aws_iam_role.lambda",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.async",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_consent_document_versions_lambda.aws_lambda_function.this",
            "module.get_consent_document_versions_lambda.aws_s3_object.lambda_package",
            "module.get_consent_document_versions_lambda.data.aws_arn.log_group_arn",
            "module.get_consent_document_versions_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy.tracing",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy.vpc",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.async",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.logs",
            "module.get_consent_document_versions_lambda.data.aws_partition.current",
            "module.get_consent_document_versions_lambda.data.external.archive_prepare",
            "module.get_consent_document_versions_lambda.local_file.archive_plan",
            "module.get_consent_document_versions_lambda.null_resource.archive",
            "module.get_current_consent_version_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_inline",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_json",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_jsons",
            "module.get_current_consent_version_lambda.aws_iam_policy.async",
            "module.get_current_consent_version_lambda.aws_iam_policy.dead_letter",
            "module.get_current_consent_version_lambda.aws_iam_policy.logs",
            "module.get_current_consent_version_lambda.aws_iam_policy.tracing",
            "module.get_current_consent_version_lambda.aws_iam_policy.vpc",
            "module.get_current_consent_version_lambda.aws_iam_role.lambda",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.async",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_current_consent_version_lambda.aws_lambda_function.this",
            "module.get_current_consent_version_lambda.aws_s3_object.lambda_package",
            "module.get_current_consent_version_lambda.data.aws_arn.log_group_arn",
            "module.get_current_consent_version_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.data.aws_iam_policy.tracing",
            "module.get_current_consent_version_lambda.data.aws_iam_policy.vpc",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.async",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.logs",
            "module.get_current_consent_version_lambda.data.aws_partition.current",
            "module.get_current_consent_version_lambda.data.external.archive_prepare",
            "module.get_current_consent_version_lambda.local_file.archive_plan",
            "module.get_current_consent_version_lambda.null_resource.archive",
            "module.get_realms_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.aws_iam_policy.additional_inline",
            "module.get_realms_lambda.aws_iam_policy.additional_json",
            "module.get_realms_lambda.aws_iam_policy.additional_jsons",
            "module.get_realms_lambda.aws_iam_policy.async",
            "module.get_realms_lambda.aws_iam_policy.dead_letter",
            "module.get_realms_lambda.aws_iam_policy.logs",
            "module.get_realms_lambda.aws_iam_policy.tracing",
            "module.get_realms_lambda.aws_iam_policy.vpc",
            "module.get_realms_lambda.aws_iam_role.lambda",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.async",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_realms_lambda.aws_lambda_function.this",
            "module.get_realms_lambda.aws_s3_object.lambda_package",
            "module.get_realms_lambda.data.aws_arn.log_group_arn",
            "module.get_realms_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.data.aws_iam_policy.tracing",
            "module.get_realms_lambda.data.aws_iam_policy.vpc",
            "module.get_realms_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_realms_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_realms_lambda.data.aws_iam_policy_document.async",
            "module.get_realms_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_realms_lambda.data.aws_iam_policy_document.logs",
            "module.get_realms_lambda.data.aws_partition.current",
            "module.get_realms_lambda.data.external.archive_prepare",
            "module.get_realms_lambda.local_file.archive_plan",
            "module.get_realms_lambda.null_resource.archive",
            "module.lambda_authorizer.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.aws_iam_policy.additional_inline",
            "module.lambda_authorizer.aws_iam_policy.additional_json",
            "module.lambda_authorizer.aws_iam_policy.additional_jsons",
            "module.lambda_authorizer.aws_iam_policy.async",
            "module.lambda_authorizer.aws_iam_policy.dead_letter",
            "module.lambda_authorizer.aws_iam_policy.logs",
            "module.lambda_authorizer.aws_iam_policy.tracing",
            "module.lambda_authorizer.aws_iam_policy.vpc",
            "module.lambda_authorizer.aws_iam_role.lambda",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_inline",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_json",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_jsons",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_many",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_one",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.async",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.dead_letter",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.logs",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.tracing",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.vpc",
            "module.lambda_authorizer.aws_lambda_function.this",
            "module.lambda_authorizer.aws_s3_object.lambda_package",
            "module.lambda_authorizer.data.aws_arn.log_group_arn",
            "module.lambda_authorizer.data.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.data.aws_iam_policy.tracing",
            "module.lambda_authorizer.data.aws_iam_policy.vpc",
            "module.lambda_authorizer.data.aws_iam_policy_document.additional_inline",
            "module.lambda_authorizer.data.aws_iam_policy_document.assume_role",
            "module.lambda_authorizer.data.aws_iam_policy_document.async",
            "module.lambda_authorizer.data.aws_iam_policy_document.dead_letter",
            "module.lambda_authorizer.data.aws_iam_policy_document.logs",
            "module.lambda_authorizer.data.aws_partition.current",
            "module.lambda_authorizer.data.external.archive_prepare",
            "module.lambda_authorizer.local_file.archive_plan",
            "module.lambda_authorizer.null_resource.archive"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "api_gateway_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::000000000000:role/cm-api-local-api-gateway-executor",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-12-14T20:00:40Z",
            "description": "The IAM role the API Gateway for the 'cm-api' project will use for the integration executions",
            "force_detach_policies": false,
            "id": "cm-api-local-api-gateway-executor",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "cm-api-local-api-gateway-executor",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            },
            "unique_id": "AROAQAAAAAAAPLNJOLMPQ"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "attach_allow_api_gateway_to_invoke_lambda_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-api-gateway-executor-20231214200047301900000012",
            "policy_arn": "arn:aws:iam::000000000000:policy/cm-api-local-invoke-lambda",
            "role": "cm-api-local-api-gateway-executor"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "aws_iam_policy.invoke_lambda_iam_policy",
            "aws_iam_role.api_gateway_role",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "data.aws_iam_policy_document.lambda_invoke_policy_document",
            "module.create_user_consent_event_lambda.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_inline",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_json",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_jsons",
            "module.create_user_consent_event_lambda.aws_iam_policy.async",
            "module.create_user_consent_event_lambda.aws_iam_policy.dead_letter",
            "module.create_user_consent_event_lambda.aws_iam_policy.logs",
            "module.create_user_consent_event_lambda.aws_iam_policy.tracing",
            "module.create_user_consent_event_lambda.aws_iam_policy.vpc",
            "module.create_user_consent_event_lambda.aws_iam_role.lambda",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.async",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.logs",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.tracing",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.vpc",
            "module.create_user_consent_event_lambda.aws_lambda_function.this",
            "module.create_user_consent_event_lambda.aws_s3_object.lambda_package",
            "module.create_user_consent_event_lambda.data.aws_arn.log_group_arn",
            "module.create_user_consent_event_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.data.aws_iam_policy.tracing",
            "module.create_user_consent_event_lambda.data.aws_iam_policy.vpc",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.additional_inline",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.assume_role",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.async",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.dead_letter",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.logs",
            "module.create_user_consent_event_lambda.data.aws_partition.current",
            "module.create_user_consent_event_lambda.data.external.archive_prepare",
            "module.create_user_consent_event_lambda.local_file.archive_plan",
            "module.create_user_consent_event_lambda.null_resource.archive",
            "module.get_consent_document_versions_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_inline",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_json",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_jsons",
            "module.get_consent_document_versions_lambda.aws_iam_policy.async",
            "module.get_consent_document_versions_lambda.aws_iam_policy.dead_letter",
            "module.get_consent_document_versions_lambda.aws_iam_policy.logs",
            "module.get_consent_document_versions_lambda.aws_iam_policy.tracing",
            "module.get_consent_document_versions_lambda.aws_iam_policy.vpc",
            "module.get_consent_document_versions_lambda.aws_iam_role.lambda",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.async",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_consent_document_versions_lambda.aws_lambda_function.this",
            "module.get_consent_document_versions_lambda.aws_s3_object.lambda_package",
            "module.get_consent_document_versions_lambda.data.aws_arn.log_group_arn",
            "module.get_consent_document_versions_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy.tracing",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy.vpc",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.async",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.logs",
            "module.get_consent_document_versions_lambda.data.aws_partition.current",
            "module.get_consent_document_versions_lambda.data.external.archive_prepare",
            "module.get_consent_document_versions_lambda.local_file.archive_plan",
            "module.get_consent_document_versions_lambda.null_resource.archive",
            "module.get_current_consent_version_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_inline",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_json",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_jsons",
            "module.get_current_consent_version_lambda.aws_iam_policy.async",
            "module.get_current_consent_version_lambda.aws_iam_policy.dead_letter",
            "module.get_current_consent_version_lambda.aws_iam_policy.logs",
            "module.get_current_consent_version_lambda.aws_iam_policy.tracing",
            "module.get_current_consent_version_lambda.aws_iam_policy.vpc",
            "module.get_current_consent_version_lambda.aws_iam_role.lambda",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.async",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_current_consent_version_lambda.aws_lambda_function.this",
            "module.get_current_consent_version_lambda.aws_s3_object.lambda_package",
            "module.get_current_consent_version_lambda.data.aws_arn.log_group_arn",
            "module.get_current_consent_version_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.data.aws_iam_policy.tracing",
            "module.get_current_consent_version_lambda.data.aws_iam_policy.vpc",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.async",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.logs",
            "module.get_current_consent_version_lambda.data.aws_partition.current",
            "module.get_current_consent_version_lambda.data.external.archive_prepare",
            "module.get_current_consent_version_lambda.local_file.archive_plan",
            "module.get_current_consent_version_lambda.null_resource.archive",
            "module.get_realms_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.aws_iam_policy.additional_inline",
            "module.get_realms_lambda.aws_iam_policy.additional_json",
            "module.get_realms_lambda.aws_iam_policy.additional_jsons",
            "module.get_realms_lambda.aws_iam_policy.async",
            "module.get_realms_lambda.aws_iam_policy.dead_letter",
            "module.get_realms_lambda.aws_iam_policy.logs",
            "module.get_realms_lambda.aws_iam_policy.tracing",
            "module.get_realms_lambda.aws_iam_policy.vpc",
            "module.get_realms_lambda.aws_iam_role.lambda",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.async",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_realms_lambda.aws_lambda_function.this",
            "module.get_realms_lambda.aws_s3_object.lambda_package",
            "module.get_realms_lambda.data.aws_arn.log_group_arn",
            "module.get_realms_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.data.aws_iam_policy.tracing",
            "module.get_realms_lambda.data.aws_iam_policy.vpc",
            "module.get_realms_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_realms_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_realms_lambda.data.aws_iam_policy_document.async",
            "module.get_realms_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_realms_lambda.data.aws_iam_policy_document.logs",
            "module.get_realms_lambda.data.aws_partition.current",
            "module.get_realms_lambda.data.external.archive_prepare",
            "module.get_realms_lambda.local_file.archive_plan",
            "module.get_realms_lambda.null_resource.archive",
            "module.lambda_authorizer.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.aws_iam_policy.additional_inline",
            "module.lambda_authorizer.aws_iam_policy.additional_json",
            "module.lambda_authorizer.aws_iam_policy.additional_jsons",
            "module.lambda_authorizer.aws_iam_policy.async",
            "module.lambda_authorizer.aws_iam_policy.dead_letter",
            "module.lambda_authorizer.aws_iam_policy.logs",
            "module.lambda_authorizer.aws_iam_policy.tracing",
            "module.lambda_authorizer.aws_iam_policy.vpc",
            "module.lambda_authorizer.aws_iam_role.lambda",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_inline",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_json",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_jsons",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_many",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_one",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.async",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.dead_letter",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.logs",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.tracing",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.vpc",
            "module.lambda_authorizer.aws_lambda_function.this",
            "module.lambda_authorizer.aws_s3_object.lambda_package",
            "module.lambda_authorizer.data.aws_arn.log_group_arn",
            "module.lambda_authorizer.data.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.data.aws_iam_policy.tracing",
            "module.lambda_authorizer.data.aws_iam_policy.vpc",
            "module.lambda_authorizer.data.aws_iam_policy_document.additional_inline",
            "module.lambda_authorizer.data.aws_iam_policy_document.assume_role",
            "module.lambda_authorizer.data.aws_iam_policy_document.async",
            "module.lambda_authorizer.data.aws_iam_policy_document.dead_letter",
            "module.lambda_authorizer.data.aws_iam_policy_document.logs",
            "module.lambda_authorizer.data.aws_partition.current",
            "module.lambda_authorizer.data.external.archive_prepare",
            "module.lambda_authorizer.local_file.archive_plan",
            "module.lambda_authorizer.null_resource.archive"
          ]
        }
      ]
    },
    {
      "module": "module.create_user_consent_event_lambda",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "000000000000",
            "arn": "arn:aws:iam::000000000000:root",
            "id": "000000000000",
            "user_id": "AKIAIOSFODNN7EXAMPLE"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.create_user_consent_event_lambda",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2690255455",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "lambda.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.create_user_consent_event_lambda",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3054295879",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-create_user_consent_event:*:*\",\n        \"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-create_user_consent_event:*\"\n      ]\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-create_user_consent_event:*",
                  "arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-create_user_consent_event:*:*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.create_user_consent_event_lambda",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.create_user_consent_event_lambda",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US East (N. Virginia)",
            "endpoint": "ec2.us-east-1.amazonaws.com",
            "id": "us-east-1",
            "name": "us-east-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.create_user_consent_event_lambda",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-create_user_consent_event",
            "id": "/aws/lambda/cm-api-local-create_user_consent_event",
            "kms_key_id": "",
            "name": "/aws/lambda/cm-api-local-create_user_consent_event",
            "name_prefix": "",
            "retention_in_days": 0,
            "skip_destroy": false,
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.create_user_consent_event_lambda",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::000000000000:policy/cm-api-local-create_user_consent_event-logs",
            "description": "",
            "id": "arn:aws:iam::000000000000:policy/cm-api-local-create_user_consent_event-logs",
            "name": "cm-api-local-create_user_consent_event-logs",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-create_user_consent_event:*:*\",\"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-create_user_consent_event:*\"]}],\"Version\":\"2012-10-17\"}",
            "policy_id": "A6QYO8CROEHROZ1LQO2JU",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.create_user_consent_event_lambda.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.data.aws_arn.log_group_arn",
            "module.create_user_consent_event_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.logs"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.create_user_consent_event_lambda",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::000000000000:role/cm-api-local-create_user_consent_event",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-12-14T20:00:40Z",
            "description": "",
            "force_detach_policies": true,
            "id": "cm-api-local-create_user_consent_event",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "cm-api-local-create_user_consent_event",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            },
            "unique_id": "AROAQAAAAAAAIMYMPYAKX"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.create_user_consent_event_lambda",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "additional_many",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-create_user_consent_event-2023121420004180650000000e",
            "policy_arn": "arn:aws:iam::000000000000:policy/cm-api-local-dynamodb-read-write",
            "role": "cm-api-local-create_user_consent_event"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.create_user_consent_event_lambda.aws_iam_role.lambda",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-create_user_consent_event-20231214200041793900000006",
            "policy_arn": "arn:aws:iam::aws:policy/AWSXrayReadOnlyAccess",
            "role": "cm-api-local-create_user_consent_event"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.create_user_consent_event_lambda.aws_iam_role.lambda",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-create_user_consent_event-2023121420004180130000000b",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
            "role": "cm-api-local-create_user_consent_event"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.create_user_consent_event_lambda.aws_iam_role.lambda",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.create_user_consent_event_lambda",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-create_user_consent_event-20231214200040495700000003",
            "policy_arn": "arn:aws:iam::000000000000:policy/cm-api-local-create_user_consent_event-logs",
            "role": "cm-api-local-create_user_consent_event"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.create_user_consent_event_lambda.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.aws_iam_policy.logs",
            "module.create_user_consent_event_lambda.aws_iam_role.lambda",
            "module.create_user_consent_event_lambda.data.aws_arn.log_group_arn",
            "module.create_user_consent_event_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.assume_role",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.logs"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.create_user_consent_event_lambda",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-create_user_consent_event",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "DYNAMODB_TABLE_NAME": "cm-api-local-dynamodb"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "cm-api-local-create_user_consent_event",
            "handler": "app.lambda_handler",
            "id": "cm-api-local-create_user_consent_event",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-create_user_consent_event/invocations",
            "kms_key_arn": "",
            "last_modified": "2023-12-14T20:00:41.981971+0000",
            "layers": null,
            "memory_size": 128,
            "package_type": "Zip",
            "publish": true,
            "qualified_arn": "arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-create_user_consent_event:1",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-create_user_consent_event:1/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::000000000000:role/cm-api-local-create_user_consent_event",
            "runtime": "python3.11",
            "s3_bucket": "hot-reload",
            "s3_key": "/Users/dvu/workspace/consent-management/consent-management-api/build/localstack-hot/services/create_user_consent_event",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "hot-reloading-hash-not-available",
            "source_code_size": 0,
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            },
            "timeout": 900,
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "1",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.create_user_consent_event_lambda.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_inline",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_json",
            "module.create_user_consent_event_lambda.aws_iam_policy.additional_jsons",
            "module.create_user_consent_event_lambda.aws_iam_policy.async",
            "module.create_user_consent_event_lambda.aws_iam_policy.dead_letter",
            "module.create_user_consent_event_lambda.aws_iam_policy.logs",
            "module.create_user_consent_event_lambda.aws_iam_policy.tracing",
            "module.create_user_consent_event_lambda.aws_iam_policy.vpc",
            "module.create_user_consent_event_lambda.aws_iam_role.lambda",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.async",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.logs",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.tracing",
            "module.create_user_consent_event_lambda.aws_iam_role_policy_attachment.vpc",
            "module.create_user_consent_event_lambda.aws_s3_object.lambda_package",
            "module.create_user_consent_event_lambda.data.aws_arn.log_group_arn",
            "module.create_user_consent_event_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.create_user_consent_event_lambda.data.aws_iam_policy.tracing",
            "module.create_user_consent_event_lambda.data.aws_iam_policy.vpc",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.additional_inline",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.assume_role",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.async",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.dead_letter",
            "module.create_user_consent_event_lambda.data.aws_iam_policy_document.logs",
            "module.create_user_consent_event_lambda.data.aws_partition.current",
            "module.create_user_consent_event_lambda.data.external.archive_prepare",
            "module.create_user_consent_event_lambda.local_file.archive_plan",
            "module.create_user_consent_event_lambda.null_resource.archive"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_consent_document_versions_lambda",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "000000000000",
            "arn": "arn:aws:iam::000000000000:root",
            "id": "000000000000",
            "user_id": "AKIAIOSFODNN7EXAMPLE"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.get_consent_document_versions_lambda",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2690255455",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "lambda.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.get_consent_document_versions_lambda",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3625870750",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get_consent_document_versions:*:*\",\n        \"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get_consent_document_versions:*\"\n      ]\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get_consent_document_versions:*",
                  "arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get_consent_document_versions:*:*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.get_consent_document_versions_lambda",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.get_consent_document_versions_lambda",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US East (N. Virginia)",
            "endpoint": "ec2.us-east-1.amazonaws.com",
            "id": "us-east-1",
            "name": "us-east-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.get_consent_document_versions_lambda",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get_consent_document_versions",
            "id": "/aws/lambda/cm-api-local-get_consent_document_versions",
            "kms_key_id": "",
            "name": "/aws/lambda/cm-api-local-get_consent_document_versions",
            "name_prefix": "",
            "retention_in_days": 0,
            "skip_destroy": false,
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_consent_document_versions_lambda",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::000000000000:policy/cm-api-local-get_consent_document_versions-logs",
            "description": "",
            "id": "arn:aws:iam::000000000000:policy/cm-api-local-get_consent_document_versions-logs",
            "name": "cm-api-local-get_consent_document_versions-logs",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get_consent_document_versions:*:*\",\"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get_consent_document_versions:*\"]}],\"Version\":\"2012-10-17\"}",
            "policy_id": "AXBNYN4A59QP8Z8KPIB16",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.get_consent_document_versions_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.data.aws_arn.log_group_arn",
            "module.get_consent_document_versions_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.logs"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_consent_document_versions_lambda",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::000000000000:role/cm-api-local-get_consent_document_versions",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-12-14T20:00:40Z",
            "description": "",
            "force_detach_policies": true,
            "id": "cm-api-local-get_consent_document_versions",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "cm-api-local-get_consent_document_versions",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            },
            "unique_id": "AROAQAAAAAAAI763KWEJ5"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_consent_document_versions_lambda",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "additional_many",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-get_consent_document_versions-20231214200041872300000010",
            "policy_arn": "arn:aws:iam::000000000000:policy/cm-api-local-dynamodb-read-write",
            "role": "cm-api-local-get_consent_document_versions"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.get_consent_document_versions_lambda.aws_iam_role.lambda",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-get_consent_document_versions-2023121420004186450000000f",
            "policy_arn": "arn:aws:iam::aws:policy/AWSXrayReadOnlyAccess",
            "role": "cm-api-local-get_consent_document_versions"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.get_consent_document_versions_lambda.aws_iam_role.lambda",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-get_consent_document_versions-20231214200041794000000007",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
            "role": "cm-api-local-get_consent_document_versions"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.get_consent_document_versions_lambda.aws_iam_role.lambda",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_consent_document_versions_lambda",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-get_consent_document_versions-20231214200040496000000004",
            "policy_arn": "arn:aws:iam::000000000000:policy/cm-api-local-get_consent_document_versions-logs",
            "role": "cm-api-local-get_consent_document_versions"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.get_consent_document_versions_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.aws_iam_policy.logs",
            "module.get_consent_document_versions_lambda.aws_iam_role.lambda",
            "module.get_consent_document_versions_lambda.data.aws_arn.log_group_arn",
            "module.get_consent_document_versions_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.logs"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_consent_document_versions_lambda",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_consent_document_versions",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "DYNAMODB_TABLE_NAME": "cm-api-local-dynamodb"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "cm-api-local-get_consent_document_versions",
            "handler": "app.lambda_handler",
            "id": "cm-api-local-get_consent_document_versions",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_consent_document_versions/invocations",
            "kms_key_arn": "",
            "last_modified": "2023-12-14T20:00:41.969650+0000",
            "layers": null,
            "memory_size": 128,
            "package_type": "Zip",
            "publish": true,
            "qualified_arn": "arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_consent_document_versions:1",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_consent_document_versions:1/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::000000000000:role/cm-api-local-get_consent_document_versions",
            "runtime": "python3.11",
            "s3_bucket": "hot-reload",
            "s3_key": "/Users/dvu/workspace/consent-management/consent-management-api/build/localstack-hot/services/get_consent_document_versions",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "hot-reloading-hash-not-available",
            "source_code_size": 0,
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            },
            "timeout": 900,
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "1",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.get_consent_document_versions_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_inline",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_json",
            "module.get_consent_document_versions_lambda.aws_iam_policy.additional_jsons",
            "module.get_consent_document_versions_lambda.aws_iam_policy.async",
            "module.get_consent_document_versions_lambda.aws_iam_policy.dead_letter",
            "module.get_consent_document_versions_lambda.aws_iam_policy.logs",
            "module.get_consent_document_versions_lambda.aws_iam_policy.tracing",
            "module.get_consent_document_versions_lambda.aws_iam_policy.vpc",
            "module.get_consent_document_versions_lambda.aws_iam_role.lambda",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.async",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_consent_document_versions_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_consent_document_versions_lambda.aws_s3_object.lambda_package",
            "module.get_consent_document_versions_lambda.data.aws_arn.log_group_arn",
            "module.get_consent_document_versions_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy.tracing",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy.vpc",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.async",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_consent_document_versions_lambda.data.aws_iam_policy_document.logs",
            "module.get_consent_document_versions_lambda.data.aws_partition.current",
            "module.get_consent_document_versions_lambda.data.external.archive_prepare",
            "module.get_consent_document_versions_lambda.local_file.archive_plan",
            "module.get_consent_document_versions_lambda.null_resource.archive"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_current_consent_version_lambda",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "000000000000",
            "arn": "arn:aws:iam::000000000000:root",
            "id": "000000000000",
            "user_id": "AKIAIOSFODNN7EXAMPLE"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.get_current_consent_version_lambda",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2690255455",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "lambda.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.get_current_consent_version_lambda",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "465348367",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get-current-consent-version:*:*\",\n        \"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get-current-consent-version:*\"\n      ]\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get-current-consent-version:*",
                  "arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get-current-consent-version:*:*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.get_current_consent_version_lambda",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.get_current_consent_version_lambda",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US East (N. Virginia)",
            "endpoint": "ec2.us-east-1.amazonaws.com",
            "id": "us-east-1",
            "name": "us-east-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.get_current_consent_version_lambda",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get-current-consent-version",
            "id": "/aws/lambda/cm-api-local-get-current-consent-version",
            "kms_key_id": "",
            "name": "/aws/lambda/cm-api-local-get-current-consent-version",
            "name_prefix": "",
            "retention_in_days": 0,
            "skip_destroy": false,
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_current_consent_version_lambda",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::000000000000:policy/cm-api-local-get-current-consent-version-logs",
            "description": "",
            "id": "arn:aws:iam::000000000000:policy/cm-api-local-get-current-consent-version-logs",
            "name": "cm-api-local-get-current-consent-version-logs",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get-current-consent-version:*:*\",\"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get-current-consent-version:*\"]}],\"Version\":\"2012-10-17\"}",
            "policy_id": "AOWRG78BJOU3SPIEYFV80",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.get_current_consent_version_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.data.aws_arn.log_group_arn",
            "module.get_current_consent_version_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.logs"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_current_consent_version_lambda",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::000000000000:role/cm-api-local-get-current-consent-version",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-12-14T20:00:40Z",
            "description": "",
            "force_detach_policies": true,
            "id": "cm-api-local-get-current-consent-version",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "cm-api-local-get-current-consent-version",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            },
            "unique_id": "AROAQAAAAAAAIXR6KP5WF"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_current_consent_version_lambda",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "additional_many",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-get-current-consent-version-2023121420004180450000000d",
            "policy_arn": "arn:aws:iam::000000000000:policy/cm-api-local-dynamodb-read-write",
            "role": "cm-api-local-get-current-consent-version"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.get_current_consent_version_lambda.aws_iam_role.lambda",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-get-current-consent-version-20231214200041796900000008",
            "policy_arn": "arn:aws:iam::aws:policy/AWSXrayReadOnlyAccess",
            "role": "cm-api-local-get-current-consent-version"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.get_current_consent_version_lambda.aws_iam_role.lambda",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-get-current-consent-version-20231214200041798500000009",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
            "role": "cm-api-local-get-current-consent-version"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.get_current_consent_version_lambda.aws_iam_role.lambda",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_current_consent_version_lambda",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-get-current-consent-version-20231214200040493800000002",
            "policy_arn": "arn:aws:iam::000000000000:policy/cm-api-local-get-current-consent-version-logs",
            "role": "cm-api-local-get-current-consent-version"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.get_current_consent_version_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.aws_iam_policy.logs",
            "module.get_current_consent_version_lambda.aws_iam_role.lambda",
            "module.get_current_consent_version_lambda.data.aws_arn.log_group_arn",
            "module.get_current_consent_version_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.logs"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_current_consent_version_lambda",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get-current-consent-version",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "DYNAMODB_TABLE_NAME": "cm-api-local-dynamodb"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "cm-api-local-get-current-consent-version",
            "handler": "app.lambda_handler",
            "id": "cm-api-local-get-current-consent-version",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get-current-consent-version/invocations",
            "kms_key_arn": "",
            "last_modified": "2023-12-14T20:00:41.958921+0000",
            "layers": null,
            "memory_size": 128,
            "package_type": "Zip",
            "publish": true,
            "qualified_arn": "arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get-current-consent-version:1",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get-current-consent-version:1/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::000000000000:role/cm-api-local-get-current-consent-version",
            "runtime": "python3.11",
            "s3_bucket": "hot-reload",
            "s3_key": "/Users/dvu/workspace/consent-management/consent-management-api/build/localstack-hot/services/get_current_consent_version",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "hot-reloading-hash-not-available",
            "source_code_size": 0,
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            },
            "timeout": 900,
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "1",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.get_current_consent_version_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_inline",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_json",
            "module.get_current_consent_version_lambda.aws_iam_policy.additional_jsons",
            "module.get_current_consent_version_lambda.aws_iam_policy.async",
            "module.get_current_consent_version_lambda.aws_iam_policy.dead_letter",
            "module.get_current_consent_version_lambda.aws_iam_policy.logs",
            "module.get_current_consent_version_lambda.aws_iam_policy.tracing",
            "module.get_current_consent_version_lambda.aws_iam_policy.vpc",
            "module.get_current_consent_version_lambda.aws_iam_role.lambda",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.async",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_current_consent_version_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_current_consent_version_lambda.aws_s3_object.lambda_package",
            "module.get_current_consent_version_lambda.data.aws_arn.log_group_arn",
            "module.get_current_consent_version_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_current_consent_version_lambda.data.aws_iam_policy.tracing",
            "module.get_current_consent_version_lambda.data.aws_iam_policy.vpc",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.async",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_current_consent_version_lambda.data.aws_iam_policy_document.logs",
            "module.get_current_consent_version_lambda.data.aws_partition.current",
            "module.get_current_consent_version_lambda.data.external.archive_prepare",
            "module.get_current_consent_version_lambda.local_file.archive_plan",
            "module.get_current_consent_version_lambda.null_resource.archive"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_realms_lambda",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "000000000000",
            "arn": "arn:aws:iam::000000000000:root",
            "id": "000000000000",
            "user_id": "AKIAIOSFODNN7EXAMPLE"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.get_realms_lambda",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2690255455",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "lambda.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.get_realms_lambda",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3298540587",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get_realms:*:*\",\n        \"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get_realms:*\"\n      ]\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get_realms:*",
                  "arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get_realms:*:*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.get_realms_lambda",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.get_realms_lambda",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US East (N. Virginia)",
            "endpoint": "ec2.us-east-1.amazonaws.com",
            "id": "us-east-1",
            "name": "us-east-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.get_realms_lambda",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get_realms",
            "id": "/aws/lambda/cm-api-local-get_realms",
            "kms_key_id": "",
            "name": "/aws/lambda/cm-api-local-get_realms",
            "name_prefix": "",
            "retention_in_days": 0,
            "skip_destroy": false,
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_realms_lambda",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::000000000000:policy/cm-api-local-get_realms-logs",
            "description": "",
            "id": "arn:aws:iam::000000000000:policy/cm-api-local-get_realms-logs",
            "name": "cm-api-local-get_realms-logs",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get_realms:*:*\",\"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-get_realms:*\"]}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ABYC862DLT6YG3A0H3Q0U",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.get_realms_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.data.aws_arn.log_group_arn",
            "module.get_realms_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.data.aws_iam_policy_document.logs"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_realms_lambda",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::000000000000:role/cm-api-local-get_realms",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-12-14T20:00:40Z",
            "description": "",
            "force_detach_policies": true,
            "id": "cm-api-local-get_realms",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "cm-api-local-get_realms",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            },
            "unique_id": "AROAQAAAAAAAIFSZUCWS7"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.get_realms_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_realms_lambda",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "additional_many",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-get_realms-2023121420004180100000000a",
            "policy_arn": "arn:aws:iam::000000000000:policy/cm-api-local-dynamodb-read-write",
            "role": "cm-api-local-get_realms"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.get_realms_lambda.aws_iam_role.lambda",
            "module.get_realms_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-get_realms-20231214200041876700000011",
            "policy_arn": "arn:aws:iam::aws:policy/AWSXrayReadOnlyAccess",
            "role": "cm-api-local-get_realms"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.get_realms_lambda.aws_iam_role.lambda",
            "module.get_realms_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-get_realms-2023121420004180150000000c",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
            "role": "cm-api-local-get_realms"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.get_realms_lambda.aws_iam_role.lambda",
            "module.get_realms_lambda.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_realms_lambda",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-get_realms-20231214200040496300000005",
            "policy_arn": "arn:aws:iam::000000000000:policy/cm-api-local-get_realms-logs",
            "role": "cm-api-local-get_realms"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.get_realms_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.aws_iam_policy.logs",
            "module.get_realms_lambda.aws_iam_role.lambda",
            "module.get_realms_lambda.data.aws_arn.log_group_arn",
            "module.get_realms_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_realms_lambda.data.aws_iam_policy_document.logs"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.get_realms_lambda",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_realms",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "DYNAMODB_TABLE_NAME": "cm-api-local-dynamodb"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "cm-api-local-get_realms",
            "handler": "app.lambda_handler",
            "id": "cm-api-local-get_realms",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_realms/invocations",
            "kms_key_arn": "",
            "last_modified": "2023-12-14T20:00:41.991326+0000",
            "layers": null,
            "memory_size": 128,
            "package_type": "Zip",
            "publish": true,
            "qualified_arn": "arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_realms:1",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-get_realms:1/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::000000000000:role/cm-api-local-get_realms",
            "runtime": "python3.11",
            "s3_bucket": "hot-reload",
            "s3_key": "/Users/dvu/workspace/consent-management/consent-management-api/build/localstack-hot/services/get_realms",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "hot-reloading-hash-not-available",
            "source_code_size": 0,
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            },
            "timeout": 900,
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "1",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_dynamodb_table.dynamodb_table",
            "aws_iam_policy.dynamodb_read_write",
            "data.aws_iam_policy_document.dynamodb_read_write",
            "module.get_realms_lambda.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.aws_iam_policy.additional_inline",
            "module.get_realms_lambda.aws_iam_policy.additional_json",
            "module.get_realms_lambda.aws_iam_policy.additional_jsons",
            "module.get_realms_lambda.aws_iam_policy.async",
            "module.get_realms_lambda.aws_iam_policy.dead_letter",
            "module.get_realms_lambda.aws_iam_policy.logs",
            "module.get_realms_lambda.aws_iam_policy.tracing",
            "module.get_realms_lambda.aws_iam_policy.vpc",
            "module.get_realms_lambda.aws_iam_role.lambda",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_inline",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_json",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_jsons",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_many",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.additional_one",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.async",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.dead_letter",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.logs",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.tracing",
            "module.get_realms_lambda.aws_iam_role_policy_attachment.vpc",
            "module.get_realms_lambda.aws_s3_object.lambda_package",
            "module.get_realms_lambda.data.aws_arn.log_group_arn",
            "module.get_realms_lambda.data.aws_cloudwatch_log_group.lambda",
            "module.get_realms_lambda.data.aws_iam_policy.tracing",
            "module.get_realms_lambda.data.aws_iam_policy.vpc",
            "module.get_realms_lambda.data.aws_iam_policy_document.additional_inline",
            "module.get_realms_lambda.data.aws_iam_policy_document.assume_role",
            "module.get_realms_lambda.data.aws_iam_policy_document.async",
            "module.get_realms_lambda.data.aws_iam_policy_document.dead_letter",
            "module.get_realms_lambda.data.aws_iam_policy_document.logs",
            "module.get_realms_lambda.data.aws_partition.current",
            "module.get_realms_lambda.data.external.archive_prepare",
            "module.get_realms_lambda.local_file.archive_plan",
            "module.get_realms_lambda.null_resource.archive"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "000000000000",
            "arn": "arn:aws:iam::000000000000:root",
            "id": "000000000000",
            "user_id": "AKIAIOSFODNN7EXAMPLE"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2690255455",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "lambda.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2533389052",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-lambda_authorizer:*:*\",\n        \"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-lambda_authorizer:*\"\n      ]\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-lambda_authorizer:*",
                  "arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-lambda_authorizer:*:*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US East (N. Virginia)",
            "endpoint": "ec2.us-east-1.amazonaws.com",
            "id": "us-east-1",
            "name": "us-east-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "data",
      "type": "external",
      "name": "archive_prepare",
      "provider": "provider[\"registry.terraform.io/hashicorp/external\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "-",
            "program": [
              "python3",
              ".terraform/modules/lambda_authorizer/package.py",
              "prepare"
            ],
            "query": {
              "artifacts_dir": "builds",
              "docker": null,
              "hash_extra": "",
              "hash_extra_paths": "[]",
              "paths": "{\"cwd\":\"/Users/dvu/workspace/consent-management/consent-management-api/terraform\",\"module\":\".terraform/modules/lambda_authorizer\",\"root\":\".\"}",
              "recreate_missing_package": "true",
              "runtime": "python3.11",
              "source_path": "[{\"path\":\"./../src/lambda_authorizer\",\"pip_requirements\":true}]"
            },
            "result": {
              "build_plan": "{\"filename\": \"builds/51804772edc179f5f9b111ef08202f8530f58450a16b1380b39e2d48d627386d.zip\", \"runtime\": \"python3.11\", \"artifacts_dir\": \"builds\", \"build_plan\": [[\"pip\", \"python3.11\", \"./../src/lambda_authorizer/requirements.txt\", null, null], [\"zip\", \"./../src/lambda_authorizer\", null]]}",
              "build_plan_filename": "builds/51804772edc179f5f9b111ef08202f8530f58450a16b1380b39e2d48d627386d.plan.json",
              "filename": "builds/51804772edc179f5f9b111ef08202f8530f58450a16b1380b39e2d48d627386d.zip",
              "timestamp": "1701964526794858000",
              "was_missing": "false"
            },
            "working_dir": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-lambda_authorizer",
            "id": "/aws/lambda/cm-api-local-lambda_authorizer",
            "kms_key_id": "",
            "name": "/aws/lambda/cm-api-local-lambda_authorizer",
            "name_prefix": "",
            "retention_in_days": 0,
            "skip_destroy": false,
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::000000000000:policy/cm-api-local-lambda_authorizer-logs",
            "description": "",
            "id": "arn:aws:iam::000000000000:policy/cm-api-local-lambda_authorizer-logs",
            "name": "cm-api-local-lambda_authorizer-logs",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-lambda_authorizer:*:*\",\"arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/cm-api-local-lambda_authorizer:*\"]}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ACBF3ILRRBL91F2VY5FEY",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda_authorizer.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.data.aws_arn.log_group_arn",
            "module.lambda_authorizer.data.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.data.aws_iam_policy_document.logs"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::000000000000:role/cm-api-local-lambda_authorizer",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-12-14T20:00:40Z",
            "description": "",
            "force_detach_policies": true,
            "id": "cm-api-local-lambda_authorizer",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "cm-api-local-lambda_authorizer",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            },
            "unique_id": "AROAQAAAAAAAHGEIWBZCX"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda_authorizer.data.aws_iam_policy_document.assume_role"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "logs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "cm-api-local-lambda_authorizer-20231214200040491300000001",
            "policy_arn": "arn:aws:iam::000000000000:policy/cm-api-local-lambda_authorizer-logs",
            "role": "cm-api-local-lambda_authorizer"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda_authorizer.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.aws_iam_policy.logs",
            "module.lambda_authorizer.aws_iam_role.lambda",
            "module.lambda_authorizer.data.aws_arn.log_group_arn",
            "module.lambda_authorizer.data.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.data.aws_iam_policy_document.assume_role",
            "module.lambda_authorizer.data.aws_iam_policy_document.logs"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-lambda_authorizer",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "UNIFIED_AUTH_JWKS_ENDPOINT": "https://rxss-playground.rxss-dev.auth0app.com/.well-known/jwks.json"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "builds/51804772edc179f5f9b111ef08202f8530f58450a16b1380b39e2d48d627386d.zip",
            "function_name": "cm-api-local-lambda_authorizer",
            "handler": "app.lambda_handler",
            "id": "cm-api-local-lambda_authorizer",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-lambda_authorizer/invocations",
            "kms_key_arn": "",
            "last_modified": "2023-12-14T20:00:41.903400+0000",
            "layers": null,
            "memory_size": 128,
            "package_type": "Zip",
            "publish": true,
            "qualified_arn": "arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-lambda_authorizer:1",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:cm-api-local-lambda_authorizer:1/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::000000000000:role/cm-api-local-lambda_authorizer",
            "runtime": "python3.11",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "XkQ04JVc1dLRKQnyTK8hnumsXzAKafHZFc5QQY5D2+s=",
            "source_code_size": 18332218,
            "tags": null,
            "tags_all": {
              "DeploymentName": "cm-api-local",
              "Service": "cm-api",
              "Terraform": "true"
            },
            "timeout": 900,
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "1",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.lambda_authorizer.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.aws_iam_policy.additional_inline",
            "module.lambda_authorizer.aws_iam_policy.additional_json",
            "module.lambda_authorizer.aws_iam_policy.additional_jsons",
            "module.lambda_authorizer.aws_iam_policy.async",
            "module.lambda_authorizer.aws_iam_policy.dead_letter",
            "module.lambda_authorizer.aws_iam_policy.logs",
            "module.lambda_authorizer.aws_iam_policy.tracing",
            "module.lambda_authorizer.aws_iam_policy.vpc",
            "module.lambda_authorizer.aws_iam_role.lambda",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_inline",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_json",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_jsons",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_many",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.additional_one",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.async",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.dead_letter",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.logs",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.tracing",
            "module.lambda_authorizer.aws_iam_role_policy_attachment.vpc",
            "module.lambda_authorizer.aws_s3_object.lambda_package",
            "module.lambda_authorizer.data.aws_arn.log_group_arn",
            "module.lambda_authorizer.data.aws_cloudwatch_log_group.lambda",
            "module.lambda_authorizer.data.aws_iam_policy.tracing",
            "module.lambda_authorizer.data.aws_iam_policy.vpc",
            "module.lambda_authorizer.data.aws_iam_policy_document.additional_inline",
            "module.lambda_authorizer.data.aws_iam_policy_document.assume_role",
            "module.lambda_authorizer.data.aws_iam_policy_document.async",
            "module.lambda_authorizer.data.aws_iam_policy_document.dead_letter",
            "module.lambda_authorizer.data.aws_iam_policy_document.logs",
            "module.lambda_authorizer.data.aws_partition.current",
            "module.lambda_authorizer.data.external.archive_prepare",
            "module.lambda_authorizer.local_file.archive_plan",
            "module.lambda_authorizer.null_resource.archive"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "managed",
      "type": "local_file",
      "name": "archive_plan",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "{\"filename\": \"builds/51804772edc179f5f9b111ef08202f8530f58450a16b1380b39e2d48d627386d.zip\", \"runtime\": \"python3.11\", \"artifacts_dir\": \"builds\", \"build_plan\": [[\"pip\", \"python3.11\", \"./../src/lambda_authorizer/requirements.txt\", null, null], [\"zip\", \"./../src/lambda_authorizer\", null]]}",
            "content_base64": null,
            "content_base64sha256": "dnplDqtboKRdAs7GCl92nlxrBHs+lAjKMzQYSA6MCBU=",
            "content_base64sha512": "v6ZUnQ+TcAvv/9dgXOzMX9zsvyl1Eyp90FRCz0O4CWt52nGDalAnPIaEq480Gyxw1tvN0fHU5BpzmjKEQhBD6w==",
            "content_md5": "037d4238bc27be46878d174a0c60d93e",
            "content_sha1": "4a112a6b24a9519f3d419871a2703edd9691a8c0",
            "content_sha256": "767a650eab5ba0a45d02cec60a5f769e5c6b047b3e9408ca333418480e8c0815",
            "content_sha512": "bfa6549d0f93700befffd7605ceccc5fdcecbf2975132a7dd05442cf43b8096b79da71836a50273c8684ab8f341b2c70d6dbcdd1f1d4e41a739a3284421043eb",
            "directory_permission": "0755",
            "file_permission": "0644",
            "filename": "builds/51804772edc179f5f9b111ef08202f8530f58450a16b1380b39e2d48d627386d.plan.json",
            "id": "4a112a6b24a9519f3d419871a2703edd9691a8c0",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.lambda_authorizer.data.external.archive_prepare"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda_authorizer",
      "mode": "managed",
      "type": "null_resource",
      "name": "archive",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "5299253222752947032",
            "triggers": {
              "filename": "builds/51804772edc179f5f9b111ef08202f8530f58450a16b1380b39e2d48d627386d.zip",
              "timestamp": "1701964526794858000"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.lambda_authorizer.data.external.archive_prepare",
            "module.lambda_authorizer.local_file.archive_plan"
          ],
          "create_before_destroy": true
        }
      ]
    }
  ],
  "check_results": null
}
